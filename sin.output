State 2 conflicts: 3 shift/reduce, 14 reduce/reduce
State 14 conflicts: 2 shift/reduce
State 30 conflicts: 1 reduce/reduce
State 72 conflicts: 14 reduce/reduce


Grammar

    0 $accept: prog $end

    1 prog: stmts END

    2 stmts: %empty
    3      | stat stmts
    4      | function stmts

    5 expr: expr '+' expr
    6     | expr '-' expr
    7     | expr '*' expr
    8     | expr '/' expr
    9     | expr POW expr
   10     | '(' expr ')'
   11     | '-' expr
   12     | PRINT '(' expr ')'
   13     | NUMBER
   14     | ID '[' expr ']' '[' expr ']'
   15     | ID '[' expr ']'
   16     | ID

   17 stat: if_stat
   18     | for_stat
   19     | while_stat
   20     | condition
   21     | declare
   22     | cont
   23     | call_function
   24     | expr

   25 bloque: stat bloque
   26       | %empty

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' cont ')' '{' bloque '}'

   28 while_stat: WHILE '(' condition ')' '{' bloque '}'

   29 condition: simple_condition '&' '&' condition
   30          | simple_condition '|' '|' condition
   31          | simple_condition
   32          | LOGIC

   33 simple_condition: ID
   34                 | ID CMP LOGIC
   35                 | ID CMP NUMBER
   36                 | ID CMP ID

   37 cont: '+' '+' ID
   38     | '-' '-' ID
   39     | ID '+' '+'
   40     | ID '-' '-'

   41 sec_num: NUMBER ',' sec_num
   42        | NUMBER
   43        | %empty

   44 array: '{' sec_num '}'

   45 sec_array: array ',' sec_array
   46          | array

   47 matrix: '{' sec_array '}'

   48 declare: ID '[' expr ']' '[' expr ']' '=' matrix
   49        | ID '[' expr ']' '[' expr ']' '=' expr
   50        | ID '[' expr ']' '=' array
   51        | ID '[' expr ']' '=' expr
   52        | ID '=' expr

   53 id_sec: ID ',' id_sec
   54       | ID
   55       | %empty

   56 function: FUN ID '(' id_sec ')' '{' bloque RETURN expr '}'
   57         | FUN ID '(' id_sec ')' '{' bloque '}'

   58 call_function: ID '(' id_sec ')'
   59              | ID '(' sec_num ')'

   60 if_stat: IF '(' condition ')' '{' bloque '}' ELSE '{' bloque '}'
   61        | IF '(' condition ')' '{' bloque '}'


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 29
    '(' (40) 10 12 27 28 56 57 58 59 60 61
    ')' (41) 10 12 27 28 56 57 58 59 60 61
    '*' (42) 7
    '+' (43) 5 37 39
    ',' (44) 41 45 53
    '-' (45) 6 11 38 40
    '/' (47) 8
    ';' (59) 27
    '=' (61) 27 48 49 50 51 52
    '[' (91) 14 15 48 49 50 51
    ']' (93) 14 15 48 49 50 51
    '{' (123) 27 28 44 47 56 57 60 61
    '|' (124) 30
    '}' (125) 27 28 44 47 56 57 60 61
    error (256)
    IF (258) 60 61
    ELSE (259) 60
    ID <symbol> (260) 14 15 16 27 33 34 35 36 37 38 39 40 48 49 50 51 52 53 54 56 57 58 59
    NUMBER <d> (261) 13 35 41 42
    FOR (262) 27
    WHILE (263) 28
    PRINT (264) 12
    RETURN (265) 56
    FUN (266) 56 57
    LOGIC <typeC> (267) 32 34
    POW (268) 9
    END (269) 1
    CMP <loCmp> (270) 34 35 36
    UMINUS (271)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    prog (33)
        on left: 1
        on right: 0
    stmts (34)
        on left: 2 3 4
        on right: 1 3 4
    expr <tree> (35)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 5 6 7 8 9 10 11 12 14 15 24 27 48 49 50 51 52 56
    stat <tree> (36)
        on left: 17 18 19 20 21 22 23 24
        on right: 3 25
    bloque (37)
        on left: 25 26
        on right: 25 27 28 56 57 60 61
    for_stat (38)
        on left: 27
        on right: 18
    while_stat (39)
        on left: 28
        on right: 19
    condition (40)
        on left: 29 30 31 32
        on right: 20 27 28 29 30 60 61
    simple_condition (41)
        on left: 33 34 35 36
        on right: 29 30 31
    cont (42)
        on left: 37 38 39 40
        on right: 22 27
    sec_num (43)
        on left: 41 42 43
        on right: 41 44 59
    array (44)
        on left: 44
        on right: 45 46 50
    sec_array (45)
        on left: 45 46
        on right: 45 47
    matrix (46)
        on left: 47
        on right: 48
    declare <tree> (47)
        on left: 48 49 50 51 52
        on right: 21
    id_sec (48)
        on left: 53 54 55
        on right: 53 56 57 58
    function (49)
        on left: 56 57
        on right: 4
    call_function (50)
        on left: 58 59
        on right: 23
    if_stat (51)
        on left: 60 61
        on right: 17


State 0

    0 $accept: . prog $end

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    FUN     shift, and go to state 7
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 2 (stmts)

    prog              go to state 12
    stmts             go to state 13
    expr              go to state 14
    stat              go to state 15
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    function          go to state 22
    call_function     go to state 23
    if_stat           go to state 24


State 1

   60 if_stat: IF . '(' condition ')' '{' bloque '}' ELSE '{' bloque '}'
   61        | IF . '(' condition ')' '{' bloque '}'

    '('  shift, and go to state 25


State 2

   14 expr: ID . '[' expr ']' '[' expr ']'
   15     | ID . '[' expr ']'
   16     | ID .
   33 simple_condition: ID .
   34                 | ID . CMP LOGIC
   35                 | ID . CMP NUMBER
   36                 | ID . CMP ID
   39 cont: ID . '+' '+'
   40     | ID . '-' '-'
   48 declare: ID . '[' expr ']' '[' expr ']' '=' matrix
   49        | ID . '[' expr ']' '[' expr ']' '=' expr
   50        | ID . '[' expr ']' '=' array
   51        | ID . '[' expr ']' '=' expr
   52        | ID . '=' expr
   58 call_function: ID . '(' id_sec ')'
   59              | ID . '(' sec_num ')'

    CMP  shift, and go to state 26
    '='  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '('  shift, and go to state 30
    '['  shift, and go to state 31

    IF        reduce using rule 16 (expr)
    IF        [reduce using rule 33 (simple_condition)]
    ID        reduce using rule 16 (expr)
    ID        [reduce using rule 33 (simple_condition)]
    NUMBER    reduce using rule 16 (expr)
    NUMBER    [reduce using rule 33 (simple_condition)]
    FOR       reduce using rule 16 (expr)
    FOR       [reduce using rule 33 (simple_condition)]
    WHILE     reduce using rule 16 (expr)
    WHILE     [reduce using rule 33 (simple_condition)]
    PRINT     reduce using rule 16 (expr)
    PRINT     [reduce using rule 33 (simple_condition)]
    RETURN    reduce using rule 16 (expr)
    RETURN    [reduce using rule 33 (simple_condition)]
    FUN       reduce using rule 16 (expr)
    FUN       [reduce using rule 33 (simple_condition)]
    LOGIC     reduce using rule 16 (expr)
    LOGIC     [reduce using rule 33 (simple_condition)]
    END       reduce using rule 16 (expr)
    END       [reduce using rule 33 (simple_condition)]
    '+'       [reduce using rule 16 (expr)]
    '+'       [reduce using rule 33 (simple_condition)]
    '-'       [reduce using rule 16 (expr)]
    '-'       [reduce using rule 33 (simple_condition)]
    '('       [reduce using rule 16 (expr)]
    '('       [reduce using rule 33 (simple_condition)]
    '}'       reduce using rule 16 (expr)
    '}'       [reduce using rule 33 (simple_condition)]
    '&'       reduce using rule 33 (simple_condition)
    '|'       reduce using rule 33 (simple_condition)
    $default  reduce using rule 16 (expr)


State 3

   13 expr: NUMBER .

    $default  reduce using rule 13 (expr)


State 4

   27 for_stat: FOR . '(' ID '=' expr ';' condition ';' cont ')' '{' bloque '}'

    '('  shift, and go to state 32


State 5

   28 while_stat: WHILE . '(' condition ')' '{' bloque '}'

    '('  shift, and go to state 33


State 6

   12 expr: PRINT . '(' expr ')'

    '('  shift, and go to state 34


State 7

   56 function: FUN . ID '(' id_sec ')' '{' bloque RETURN expr '}'
   57         | FUN . ID '(' id_sec ')' '{' bloque '}'

    ID  shift, and go to state 35


State 8

   32 condition: LOGIC .

    $default  reduce using rule 32 (condition)


State 9

   37 cont: '+' . '+' ID

    '+'  shift, and go to state 36


State 10

   11 expr: '-' . expr
   38 cont: '-' . '-' ID

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 38
    '('     shift, and go to state 11

    expr  go to state 39


State 11

   10 expr: '(' . expr ')'

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 41


State 12

    0 $accept: prog . $end

    $end  shift, and go to state 42


State 13

    1 prog: stmts . END

    END  shift, and go to state 43


State 14

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   24 stat: expr .

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    '+'       [reduce using rule 24 (stat)]
    '-'       [reduce using rule 24 (stat)]
    $default  reduce using rule 24 (stat)


State 15

    3 stmts: stat . stmts

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    FUN     shift, and go to state 7
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 2 (stmts)

    stmts             go to state 49
    expr              go to state 14
    stat              go to state 15
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    function          go to state 22
    call_function     go to state 23
    if_stat           go to state 24


State 16

   18 stat: for_stat .

    $default  reduce using rule 18 (stat)


State 17

   19 stat: while_stat .

    $default  reduce using rule 19 (stat)


State 18

   20 stat: condition .

    $default  reduce using rule 20 (stat)


State 19

   29 condition: simple_condition . '&' '&' condition
   30          | simple_condition . '|' '|' condition
   31          | simple_condition .

    '&'  shift, and go to state 50
    '|'  shift, and go to state 51

    $default  reduce using rule 31 (condition)


State 20

   22 stat: cont .

    $default  reduce using rule 22 (stat)


State 21

   21 stat: declare .

    $default  reduce using rule 21 (stat)


State 22

    4 stmts: function . stmts

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    FUN     shift, and go to state 7
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 2 (stmts)

    stmts             go to state 52
    expr              go to state 14
    stat              go to state 15
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    function          go to state 22
    call_function     go to state 23
    if_stat           go to state 24


State 23

   23 stat: call_function .

    $default  reduce using rule 23 (stat)


State 24

   17 stat: if_stat .

    $default  reduce using rule 17 (stat)


State 25

   60 if_stat: IF '(' . condition ')' '{' bloque '}' ELSE '{' bloque '}'
   61        | IF '(' . condition ')' '{' bloque '}'

    ID     shift, and go to state 53
    LOGIC  shift, and go to state 8

    condition         go to state 54
    simple_condition  go to state 19


State 26

   34 simple_condition: ID CMP . LOGIC
   35                 | ID CMP . NUMBER
   36                 | ID CMP . ID

    ID      shift, and go to state 55
    NUMBER  shift, and go to state 56
    LOGIC   shift, and go to state 57


State 27

   52 declare: ID '=' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 58


State 28

   39 cont: ID '+' . '+'

    '+'  shift, and go to state 59


State 29

   40 cont: ID '-' . '-'

    '-'  shift, and go to state 60


State 30

   58 call_function: ID '(' . id_sec ')'
   59              | ID '(' . sec_num ')'

    ID      shift, and go to state 61
    NUMBER  shift, and go to state 62

    ')'       reduce using rule 43 (sec_num)
    ')'       [reduce using rule 55 (id_sec)]
    $default  reduce using rule 43 (sec_num)

    sec_num  go to state 63
    id_sec   go to state 64


State 31

   14 expr: ID '[' . expr ']' '[' expr ']'
   15     | ID '[' . expr ']'
   48 declare: ID '[' . expr ']' '[' expr ']' '=' matrix
   49        | ID '[' . expr ']' '[' expr ']' '=' expr
   50        | ID '[' . expr ']' '=' array
   51        | ID '[' . expr ']' '=' expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 65


State 32

   27 for_stat: FOR '(' . ID '=' expr ';' condition ';' cont ')' '{' bloque '}'

    ID  shift, and go to state 66


State 33

   28 while_stat: WHILE '(' . condition ')' '{' bloque '}'

    ID     shift, and go to state 53
    LOGIC  shift, and go to state 8

    condition         go to state 67
    simple_condition  go to state 19


State 34

   12 expr: PRINT '(' . expr ')'

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 68


State 35

   56 function: FUN ID . '(' id_sec ')' '{' bloque RETURN expr '}'
   57         | FUN ID . '(' id_sec ')' '{' bloque '}'

    '('  shift, and go to state 69


State 36

   37 cont: '+' '+' . ID

    ID  shift, and go to state 70


State 37

   14 expr: ID . '[' expr ']' '[' expr ']'
   15     | ID . '[' expr ']'
   16     | ID .

    '['  shift, and go to state 71

    $default  reduce using rule 16 (expr)


State 38

   11 expr: '-' . expr
   38 cont: '-' '-' . ID

    ID      shift, and go to state 72
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 39


State 39

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   11     | '-' expr .

    POW  shift, and go to state 44

    $default  reduce using rule 11 (expr)


State 40

   11 expr: '-' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 39


State 41

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   10     | '(' expr . ')'

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 73


State 42

    0 $accept: prog $end .

    $default  accept


State 43

    1 prog: stmts END .

    $default  reduce using rule 1 (prog)


State 44

    9 expr: expr POW . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 74


State 45

    5 expr: expr '+' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 75


State 46

    6 expr: expr '-' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 76


State 47

    7 expr: expr '*' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 77


State 48

    8 expr: expr '/' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 78


State 49

    3 stmts: stat stmts .

    $default  reduce using rule 3 (stmts)


State 50

   29 condition: simple_condition '&' . '&' condition

    '&'  shift, and go to state 79


State 51

   30 condition: simple_condition '|' . '|' condition

    '|'  shift, and go to state 80


State 52

    4 stmts: function stmts .

    $default  reduce using rule 4 (stmts)


State 53

   33 simple_condition: ID .
   34                 | ID . CMP LOGIC
   35                 | ID . CMP NUMBER
   36                 | ID . CMP ID

    CMP  shift, and go to state 26

    $default  reduce using rule 33 (simple_condition)


State 54

   60 if_stat: IF '(' condition . ')' '{' bloque '}' ELSE '{' bloque '}'
   61        | IF '(' condition . ')' '{' bloque '}'

    ')'  shift, and go to state 81


State 55

   36 simple_condition: ID CMP ID .

    $default  reduce using rule 36 (simple_condition)


State 56

   35 simple_condition: ID CMP NUMBER .

    $default  reduce using rule 35 (simple_condition)


State 57

   34 simple_condition: ID CMP LOGIC .

    $default  reduce using rule 34 (simple_condition)


State 58

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   52 declare: ID '=' expr .

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 52 (declare)


State 59

   39 cont: ID '+' '+' .

    $default  reduce using rule 39 (cont)


State 60

   40 cont: ID '-' '-' .

    $default  reduce using rule 40 (cont)


State 61

   53 id_sec: ID . ',' id_sec
   54       | ID .

    ','  shift, and go to state 82

    $default  reduce using rule 54 (id_sec)


State 62

   41 sec_num: NUMBER . ',' sec_num
   42        | NUMBER .

    ','  shift, and go to state 83

    $default  reduce using rule 42 (sec_num)


State 63

   59 call_function: ID '(' sec_num . ')'

    ')'  shift, and go to state 84


State 64

   58 call_function: ID '(' id_sec . ')'

    ')'  shift, and go to state 85


State 65

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   14     | ID '[' expr . ']' '[' expr ']'
   15     | ID '[' expr . ']'
   48 declare: ID '[' expr . ']' '[' expr ']' '=' matrix
   49        | ID '[' expr . ']' '[' expr ']' '=' expr
   50        | ID '[' expr . ']' '=' array
   51        | ID '[' expr . ']' '=' expr

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 86


State 66

   27 for_stat: FOR '(' ID . '=' expr ';' condition ';' cont ')' '{' bloque '}'

    '='  shift, and go to state 87


State 67

   28 while_stat: WHILE '(' condition . ')' '{' bloque '}'

    ')'  shift, and go to state 88


State 68

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   12     | PRINT '(' expr . ')'

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ')'  shift, and go to state 89


State 69

   56 function: FUN ID '(' . id_sec ')' '{' bloque RETURN expr '}'
   57         | FUN ID '(' . id_sec ')' '{' bloque '}'

    ID  shift, and go to state 61

    $default  reduce using rule 55 (id_sec)

    id_sec  go to state 90


State 70

   37 cont: '+' '+' ID .

    $default  reduce using rule 37 (cont)


State 71

   14 expr: ID '[' . expr ']' '[' expr ']'
   15     | ID '[' . expr ']'

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 91


State 72

   14 expr: ID . '[' expr ']' '[' expr ']'
   15     | ID . '[' expr ']'
   16     | ID .
   38 cont: '-' '-' ID .

    '['  shift, and go to state 71

    IF        reduce using rule 16 (expr)
    IF        [reduce using rule 38 (cont)]
    ID        reduce using rule 16 (expr)
    ID        [reduce using rule 38 (cont)]
    NUMBER    reduce using rule 16 (expr)
    NUMBER    [reduce using rule 38 (cont)]
    FOR       reduce using rule 16 (expr)
    FOR       [reduce using rule 38 (cont)]
    WHILE     reduce using rule 16 (expr)
    WHILE     [reduce using rule 38 (cont)]
    PRINT     reduce using rule 16 (expr)
    PRINT     [reduce using rule 38 (cont)]
    RETURN    reduce using rule 16 (expr)
    RETURN    [reduce using rule 38 (cont)]
    FUN       reduce using rule 16 (expr)
    FUN       [reduce using rule 38 (cont)]
    LOGIC     reduce using rule 16 (expr)
    LOGIC     [reduce using rule 38 (cont)]
    END       reduce using rule 16 (expr)
    END       [reduce using rule 38 (cont)]
    '+'       reduce using rule 16 (expr)
    '+'       [reduce using rule 38 (cont)]
    '-'       reduce using rule 16 (expr)
    '-'       [reduce using rule 38 (cont)]
    '('       reduce using rule 16 (expr)
    '('       [reduce using rule 38 (cont)]
    '}'       reduce using rule 16 (expr)
    '}'       [reduce using rule 38 (cont)]
    $default  reduce using rule 16 (expr)


State 73

   10 expr: '(' expr ')' .

    $default  reduce using rule 10 (expr)


State 74

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
    9     | expr POW expr .

    POW  shift, and go to state 44

    $default  reduce using rule 9 (expr)


State 75

    5 expr: expr . '+' expr
    5     | expr '+' expr .
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr

    POW  shift, and go to state 44
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 5 (expr)


State 76

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    6     | expr '-' expr .
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr

    POW  shift, and go to state 44
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 6 (expr)


State 77

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    7     | expr '*' expr .
    8     | expr . '/' expr
    9     | expr . POW expr

    POW  shift, and go to state 44

    $default  reduce using rule 7 (expr)


State 78

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    8     | expr '/' expr .
    9     | expr . POW expr

    POW  shift, and go to state 44

    $default  reduce using rule 8 (expr)


State 79

   29 condition: simple_condition '&' '&' . condition

    ID     shift, and go to state 53
    LOGIC  shift, and go to state 8

    condition         go to state 92
    simple_condition  go to state 19


State 80

   30 condition: simple_condition '|' '|' . condition

    ID     shift, and go to state 53
    LOGIC  shift, and go to state 8

    condition         go to state 93
    simple_condition  go to state 19


State 81

   60 if_stat: IF '(' condition ')' . '{' bloque '}' ELSE '{' bloque '}'
   61        | IF '(' condition ')' . '{' bloque '}'

    '{'  shift, and go to state 94


State 82

   53 id_sec: ID ',' . id_sec

    ID  shift, and go to state 61

    $default  reduce using rule 55 (id_sec)

    id_sec  go to state 95


State 83

   41 sec_num: NUMBER ',' . sec_num

    NUMBER  shift, and go to state 62

    $default  reduce using rule 43 (sec_num)

    sec_num  go to state 96


State 84

   59 call_function: ID '(' sec_num ')' .

    $default  reduce using rule 59 (call_function)


State 85

   58 call_function: ID '(' id_sec ')' .

    $default  reduce using rule 58 (call_function)


State 86

   14 expr: ID '[' expr ']' . '[' expr ']'
   15     | ID '[' expr ']' .
   48 declare: ID '[' expr ']' . '[' expr ']' '=' matrix
   49        | ID '[' expr ']' . '[' expr ']' '=' expr
   50        | ID '[' expr ']' . '=' array
   51        | ID '[' expr ']' . '=' expr

    '='  shift, and go to state 97
    '['  shift, and go to state 98

    $default  reduce using rule 15 (expr)


State 87

   27 for_stat: FOR '(' ID '=' . expr ';' condition ';' cont ')' '{' bloque '}'

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 99


State 88

   28 while_stat: WHILE '(' condition ')' . '{' bloque '}'

    '{'  shift, and go to state 100


State 89

   12 expr: PRINT '(' expr ')' .

    $default  reduce using rule 12 (expr)


State 90

   56 function: FUN ID '(' id_sec . ')' '{' bloque RETURN expr '}'
   57         | FUN ID '(' id_sec . ')' '{' bloque '}'

    ')'  shift, and go to state 101


State 91

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   14     | ID '[' expr . ']' '[' expr ']'
   15     | ID '[' expr . ']'

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 102


State 92

   29 condition: simple_condition '&' '&' condition .

    $default  reduce using rule 29 (condition)


State 93

   30 condition: simple_condition '|' '|' condition .

    $default  reduce using rule 30 (condition)


State 94

   60 if_stat: IF '(' condition ')' '{' . bloque '}' ELSE '{' bloque '}'
   61        | IF '(' condition ')' '{' . bloque '}'

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 26 (bloque)

    expr              go to state 14
    stat              go to state 103
    bloque            go to state 104
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    call_function     go to state 23
    if_stat           go to state 24


State 95

   53 id_sec: ID ',' id_sec .

    $default  reduce using rule 53 (id_sec)


State 96

   41 sec_num: NUMBER ',' sec_num .

    $default  reduce using rule 41 (sec_num)


State 97

   50 declare: ID '[' expr ']' '=' . array
   51        | ID '[' expr ']' '=' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11
    '{'     shift, and go to state 105

    expr   go to state 106
    array  go to state 107


State 98

   14 expr: ID '[' expr ']' '[' . expr ']'
   48 declare: ID '[' expr ']' '[' . expr ']' '=' matrix
   49        | ID '[' expr ']' '[' . expr ']' '=' expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 108


State 99

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   27 for_stat: FOR '(' ID '=' expr . ';' condition ';' cont ')' '{' bloque '}'

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ';'  shift, and go to state 109


State 100

   28 while_stat: WHILE '(' condition ')' '{' . bloque '}'

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 26 (bloque)

    expr              go to state 14
    stat              go to state 103
    bloque            go to state 110
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    call_function     go to state 23
    if_stat           go to state 24


State 101

   56 function: FUN ID '(' id_sec ')' . '{' bloque RETURN expr '}'
   57         | FUN ID '(' id_sec ')' . '{' bloque '}'

    '{'  shift, and go to state 111


State 102

   14 expr: ID '[' expr ']' . '[' expr ']'
   15     | ID '[' expr ']' .

    '['  shift, and go to state 112

    $default  reduce using rule 15 (expr)


State 103

   25 bloque: stat . bloque

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 26 (bloque)

    expr              go to state 14
    stat              go to state 103
    bloque            go to state 113
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    call_function     go to state 23
    if_stat           go to state 24


State 104

   60 if_stat: IF '(' condition ')' '{' bloque . '}' ELSE '{' bloque '}'
   61        | IF '(' condition ')' '{' bloque . '}'

    '}'  shift, and go to state 114


State 105

   44 array: '{' . sec_num '}'

    NUMBER  shift, and go to state 62

    $default  reduce using rule 43 (sec_num)

    sec_num  go to state 115


State 106

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   51 declare: ID '[' expr ']' '=' expr .

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 51 (declare)


State 107

   50 declare: ID '[' expr ']' '=' array .

    $default  reduce using rule 50 (declare)


State 108

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   14     | ID '[' expr ']' '[' expr . ']'
   48 declare: ID '[' expr ']' '[' expr . ']' '=' matrix
   49        | ID '[' expr ']' '[' expr . ']' '=' expr

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 116


State 109

   27 for_stat: FOR '(' ID '=' expr ';' . condition ';' cont ')' '{' bloque '}'

    ID     shift, and go to state 53
    LOGIC  shift, and go to state 8

    condition         go to state 117
    simple_condition  go to state 19


State 110

   28 while_stat: WHILE '(' condition ')' '{' bloque . '}'

    '}'  shift, and go to state 118


State 111

   56 function: FUN ID '(' id_sec ')' '{' . bloque RETURN expr '}'
   57         | FUN ID '(' id_sec ')' '{' . bloque '}'

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 26 (bloque)

    expr              go to state 14
    stat              go to state 103
    bloque            go to state 119
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    call_function     go to state 23
    if_stat           go to state 24


State 112

   14 expr: ID '[' expr ']' '[' . expr ']'

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 120


State 113

   25 bloque: stat bloque .

    $default  reduce using rule 25 (bloque)


State 114

   60 if_stat: IF '(' condition ')' '{' bloque '}' . ELSE '{' bloque '}'
   61        | IF '(' condition ')' '{' bloque '}' .

    ELSE  shift, and go to state 121

    $default  reduce using rule 61 (if_stat)


State 115

   44 array: '{' sec_num . '}'

    '}'  shift, and go to state 122


State 116

   14 expr: ID '[' expr ']' '[' expr ']' .
   48 declare: ID '[' expr ']' '[' expr ']' . '=' matrix
   49        | ID '[' expr ']' '[' expr ']' . '=' expr

    '='  shift, and go to state 123

    $default  reduce using rule 14 (expr)


State 117

   27 for_stat: FOR '(' ID '=' expr ';' condition . ';' cont ')' '{' bloque '}'

    ';'  shift, and go to state 124


State 118

   28 while_stat: WHILE '(' condition ')' '{' bloque '}' .

    $default  reduce using rule 28 (while_stat)


State 119

   56 function: FUN ID '(' id_sec ')' '{' bloque . RETURN expr '}'
   57         | FUN ID '(' id_sec ')' '{' bloque . '}'

    RETURN  shift, and go to state 125
    '}'     shift, and go to state 126


State 120

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   14     | ID '[' expr ']' '[' expr . ']'

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    ']'  shift, and go to state 127


State 121

   60 if_stat: IF '(' condition ')' '{' bloque '}' ELSE . '{' bloque '}'

    '{'  shift, and go to state 128


State 122

   44 array: '{' sec_num '}' .

    $default  reduce using rule 44 (array)


State 123

   48 declare: ID '[' expr ']' '[' expr ']' '=' . matrix
   49        | ID '[' expr ']' '[' expr ']' '=' . expr

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11
    '{'     shift, and go to state 129

    expr    go to state 130
    matrix  go to state 131


State 124

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' . cont ')' '{' bloque '}'

    ID   shift, and go to state 132
    '+'  shift, and go to state 9
    '-'  shift, and go to state 133

    cont  go to state 134


State 125

   56 function: FUN ID '(' id_sec ')' '{' bloque RETURN . expr '}'

    ID      shift, and go to state 37
    NUMBER  shift, and go to state 3
    PRINT   shift, and go to state 6
    '-'     shift, and go to state 40
    '('     shift, and go to state 11

    expr  go to state 135


State 126

   57 function: FUN ID '(' id_sec ')' '{' bloque '}' .

    $default  reduce using rule 57 (function)


State 127

   14 expr: ID '[' expr ']' '[' expr ']' .

    $default  reduce using rule 14 (expr)


State 128

   60 if_stat: IF '(' condition ')' '{' bloque '}' ELSE '{' . bloque '}'

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 26 (bloque)

    expr              go to state 14
    stat              go to state 103
    bloque            go to state 136
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    call_function     go to state 23
    if_stat           go to state 24


State 129

   47 matrix: '{' . sec_array '}'

    '{'  shift, and go to state 105

    array      go to state 137
    sec_array  go to state 138


State 130

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   49 declare: ID '[' expr ']' '[' expr ']' '=' expr .

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 49 (declare)


State 131

   48 declare: ID '[' expr ']' '[' expr ']' '=' matrix .

    $default  reduce using rule 48 (declare)


State 132

   39 cont: ID . '+' '+'
   40     | ID . '-' '-'

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29


State 133

   38 cont: '-' . '-' ID

    '-'  shift, and go to state 139


State 134

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' cont . ')' '{' bloque '}'

    ')'  shift, and go to state 140


State 135

    5 expr: expr . '+' expr
    6     | expr . '-' expr
    7     | expr . '*' expr
    8     | expr . '/' expr
    9     | expr . POW expr
   56 function: FUN ID '(' id_sec ')' '{' bloque RETURN expr . '}'

    POW  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '}'  shift, and go to state 141


State 136

   60 if_stat: IF '(' condition ')' '{' bloque '}' ELSE '{' bloque . '}'

    '}'  shift, and go to state 142


State 137

   45 sec_array: array . ',' sec_array
   46          | array .

    ','  shift, and go to state 143

    $default  reduce using rule 46 (sec_array)


State 138

   47 matrix: '{' sec_array . '}'

    '}'  shift, and go to state 144


State 139

   38 cont: '-' '-' . ID

    ID  shift, and go to state 145


State 140

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' cont ')' . '{' bloque '}'

    '{'  shift, and go to state 146


State 141

   56 function: FUN ID '(' id_sec ')' '{' bloque RETURN expr '}' .

    $default  reduce using rule 56 (function)


State 142

   60 if_stat: IF '(' condition ')' '{' bloque '}' ELSE '{' bloque '}' .

    $default  reduce using rule 60 (if_stat)


State 143

   45 sec_array: array ',' . sec_array

    '{'  shift, and go to state 105

    array      go to state 137
    sec_array  go to state 147


State 144

   47 matrix: '{' sec_array '}' .

    $default  reduce using rule 47 (matrix)


State 145

   38 cont: '-' '-' ID .

    $default  reduce using rule 38 (cont)


State 146

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' cont ')' '{' . bloque '}'

    IF      shift, and go to state 1
    ID      shift, and go to state 2
    NUMBER  shift, and go to state 3
    FOR     shift, and go to state 4
    WHILE   shift, and go to state 5
    PRINT   shift, and go to state 6
    LOGIC   shift, and go to state 8
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '('     shift, and go to state 11

    $default  reduce using rule 26 (bloque)

    expr              go to state 14
    stat              go to state 103
    bloque            go to state 148
    for_stat          go to state 16
    while_stat        go to state 17
    condition         go to state 18
    simple_condition  go to state 19
    cont              go to state 20
    declare           go to state 21
    call_function     go to state 23
    if_stat           go to state 24


State 147

   45 sec_array: array ',' sec_array .

    $default  reduce using rule 45 (sec_array)


State 148

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' cont ')' '{' bloque . '}'

    '}'  shift, and go to state 149


State 149

   27 for_stat: FOR '(' ID '=' expr ';' condition ';' cont ')' '{' bloque '}' .

    $default  reduce using rule 27 (for_stat)
